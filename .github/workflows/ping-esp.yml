name: Ping ESP32 (deep diag)
on:
  workflow_dispatch:

jobs:
  diag:
    runs-on: ubuntu-latest
    steps:
      - name: Show inputs
        env:
          ESP_BASE: ${{ secrets.ESP_BASE }}
          ESP_USER: ${{ secrets.ESP_USER }}
          ESP_PASS: ${{ secrets.ESP_PASS }}
          ESP_INSECURE: ${{ secrets.ESP_INSECURE }}
        shell: bash
        run: |
          echo "ESP_BASE: ${ESP_BASE:-<EMPTY>}"
          if [ -n "${ESP_USER:-}" ]; then echo "ESP_USER set? yes"; else echo "ESP_USER set? no"; fi
          if [ -n "${ESP_PASS:-}" ]; then echo "ESP_PASS set? yes"; else echo "ESP_PASS set? no"; fi
          echo "ESP_INSECURE: ${ESP_INSECURE:-false}"

      - name: DNS/Port check + curl verbose
        env:
          ESP_BASE: ${{ secrets.ESP_BASE }}
          ESP_USER: ${{ secrets.ESP_USER }}
          ESP_PASS: ${{ secrets.ESP_PASS }}
          ESP_INSECURE: ${{ secrets.ESP_INSECURE }}
        shell: bash
        run: |
          set -euo pipefail
          [ -n "${ESP_BASE:-}" ] || { echo "❌ Secret ESP_BASE mancante"; exit 1; }

          # Parse URL (scheme, host, port, path) in puro Bash
          re='^(https?)://([^/:]+)(:([0-9]+))?(/.*)?$'
          if [[ "$ESP_BASE" =~ $re ]]; then
            SCHEME="${BASH_REMATCH[1]}"
            HOST="${BASH_REMATCH[2]}"
            PORT="${BASH_REMATCH[4]}"
            PATH="${BASH_REMATCH[5]}"
          else
            echo "❌ ESP_BASE non valido: $ESP_BASE"; exit 1
          fi
          if [ -z "${PORT:-}" ]; then
            if [ "$SCHEME" = "https" ]; then PORT=443; else PORT=80; fi
          fi
          PATH="${PATH%/}"
          BASE="${SCHEME}://${HOST}:${PORT}${PATH}"

          echo "Resolved: $BASE"
          echo "DNS:"
          getent ahostsv4 "$HOST" || true

          echo "TCP connect test:"
          timeout 5 bash -lc "cat < /dev/null > /dev/tcp/$HOST/$PORT" \
            && echo "✅ TCP OK" || echo "❌ TCP FAIL"

          AUTH=()
          if [ -n "${ESP_USER:-}" ] && [ -n "${ESP_PASS:-}" ]; then AUTH=(-u "$ESP_USER:$ESP_PASS"); fi
          SSL=()
          if [ "$SCHEME" = "https" ] && [ "${ESP_INSECURE:-}" = "true" ]; then SSL=(-k); fi

          test_path () {
            local p="$1"
            echo "---- CURL $BASE$p"
            curl -v -L -sS "${AUTH[@]}" "${SSL[@]}" \
                 -o /tmp/body -w "\n<HTTP=%{http_code}>\n" \
                 "$BASE$p?t=$(date +%s)" || true
            echo "Body (first 400 bytes):"
            head -c 400 /tmp/body; echo; echo "----------"
          }

          test_path /api/ping
          test_path /api/state

          code=$(curl -sS -o /dev/null -w "%{http_code}" "${AUTH[@]}" "${SSL[@]}" "$BASE/api/ping?t=$(date +%s)" || true)
          if [[ "$code" =~ ^2..$ ]]; then
            echo "✅ OK /api/ping"
          else
            echo "❌ HTTP $code su /api/ping"; exit 1
          fi
