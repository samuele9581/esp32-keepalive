name: Ping ESP32 (diag)

on:
  workflow_dispatch:  # lo lanci a mano
  # schedule:
  #   - cron: "*/5 * * * *"  # riattivalo quando funziona

jobs:
  ping:
    runs-on: ubuntu-latest
    steps:
      - name: Diagnose reachability and auth
        env:
          ESP_BASE: ${{ secrets.ESP_BASE }}
          ESP_USER: ${{ secrets.ESP_USER }}
          ESP_PASS: ${{ secrets.ESP_PASS }}
          ESP_INSECURE: ${{ secrets.ESP_INSECURE }}
        run: |
          set -e
          [ -n "$ESP_BASE" ] || { echo "❌ Secret ESP_BASE mancante"; exit 1; }

          AUTH_OPTS=()
          if [ -n "$ESP_USER" ] && [ -n "$ESP_PASS" ]; then
            AUTH_OPTS=(-u "$ESP_USER:$ESP_PASS")
          fi

          SSL_OPTS=()
          if [ "$ESP_INSECURE" = "true" ]; then
            SSL_OPTS=(-k)
          fi

          test_one () {
            local PATH_="$1"
            echo "---- TEST $ESP_BASE$PATH_"
            CODE=$(curl -L -sS -o /tmp/out "${AUTH_OPTS[@]}" "${SSL_OPTS[@]}" \
                   -w "%{http_code}" "$ESP_BASE$PATH_?t=$(date +%s)" || true)
            echo "HTTP $CODE"
            head -c 400 /tmp/out; echo
            if [ "$CODE" -ge 200 ] && [ "$CODE" -lt 400 ]; then
              echo "✅ OK $PATH_"; return 0
            else
              echo "⚠️  KO $PATH_ (HTTP $CODE)"; return 1
            fi
          }

          # Prova prima l'endpoint più semplice
          test_one /api/ping && exit 0
          # Poi lo stato completo
          test_one /api/state && exit 0

          echo "❌ Nessun endpoint raggiungibile con codice 2xx"
          exit 1
